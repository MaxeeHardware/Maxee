// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var maxeeDevices = MaxeeDevices.FromJson(jsonString);
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Maxee.DemoAPIConsole.MaxeeDevicesQuickType
{
    public partial class MaxeeDevices
    {
        [JsonProperty("data")]
        public Datum[] Data { get; set; }

        [JsonProperty("total")]
        public long Total { get; set; }

        [JsonProperty("aggregateResults")]
        public object AggregateResults { get; set; }

        [JsonProperty("errors")]
        public object Errors { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("divisionName")]
        public string DivisionName { get; set; }

        [JsonProperty("companyId")]
        public long CompanyId { get; set; }

        [JsonProperty("companyName")]
        public string CompanyName { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("uniqueId")]
        public string UniqueId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("divisionId")]
        public long DivisionId { get; set; }

        [JsonProperty("isGateway")]
        public bool IsGateway { get; set; }

        [JsonProperty("parentGatewayId")]
        public long? ParentGatewayId { get; set; }
    }

    public partial class MaxeeDevices
    {
        public static MaxeeDevices FromJson(string json) => JsonConvert.DeserializeObject<MaxeeDevices>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this MaxeeDevices self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

  

}
