// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var maxeeDeviceChannels = MaxeeDeviceChannels.FromJson(jsonString);
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Maxee.DemoAPIConsole.MaxeeDeviceChannelsQuickType
{
        public partial class MaxeeDeviceChannels
        {
            [JsonProperty("data")]
            public Datum[] Data { get; set; }

            [JsonProperty("total")]
            public long Total { get; set; }

            [JsonProperty("aggregateResults")]
            public object AggregateResults { get; set; }

            [JsonProperty("errors")]
            public object Errors { get; set; }
        }

        public partial class Datum
        {
            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonProperty("name")]
            public string Name { get; set; }

            [JsonProperty("channelType")]
            public long ChannelType { get; set; }

            [JsonProperty("unit")]
            public string Unit { get; set; }

            [JsonProperty("description")]
            public string Description { get; set; }

            [JsonProperty("deviceId")]
            public long DeviceId { get; set; }
        }

        public partial class MaxeeDeviceChannels
        {
            public static MaxeeDeviceChannels FromJson(string json) => JsonConvert.DeserializeObject<MaxeeDeviceChannels>(json, Converter.Settings);
        }

        public static class Serialize
        {
            public static string ToJson(this MaxeeDeviceChannels self) => JsonConvert.SerializeObject(self, Converter.Settings);
        }

        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
            };
        }
    }