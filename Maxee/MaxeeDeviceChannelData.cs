// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var maxeeDeviceChannelDataList = MaxeeDeviceChannelDataList.FromJson(jsonString);
using System;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Maxee.DemoAPIConsole.MaxeeDeviceChannelDataQuickType
{
    public partial class MaxeeDeviceChannelDataList
    {
        [JsonProperty("data")]
        public Datum[] Data { get; set; }

        [JsonProperty("total")]
        public long Total { get; set; }

        [JsonProperty("aggregateResults")]
        public object AggregateResults { get; set; }

        [JsonProperty("errors")]
        public object Errors { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("timeStamp")]
        public DateTimeOffset TimeStamp { get; set; }

        [JsonProperty("value")]
        public double Value { get; set; }

        [JsonProperty("channelId")]
        public long ChannelId { get; set; }

        [JsonProperty("lastChangedOn")]
        public DateTimeOffset LastChangedOn { get; set; }
    }

    public partial class MaxeeDeviceChannelDataList
    {
        public static MaxeeDeviceChannelDataList FromJson(string json) => JsonConvert.DeserializeObject<MaxeeDeviceChannelDataList>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this MaxeeDeviceChannelDataList self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
